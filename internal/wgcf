#!/bin/bash

# https://developers.cloudflare.com/cloudflare-one/connections/connect-devices/warp/deployment/firewall/#warp-ingress-ip
WGCF_ENDPOINT_CIDR="${WGCF_ENDPOINT_CIDR:-162.159.192.0/24}"

update_wgcf_config() {
  local IFACE=$(ip route show default | awk '{print $5}')
  local IPv4=$(ip addr show dev "$IFACE" | awk '/inet /{print $2}' | cut -d' ' -f2)
  local IPv6=$(ip addr show dev "$IFACE" | awk '/inet6 /{print $2}' | cut -d' ' -f2)

  local TEMP_DIR="$(mktemp -d)"
  local DIST_DIR="$(dirname "$1")"

  pushd "$TEMP_DIR" &> /dev/null || exit 1
  if [ -f "$DIST_DIR/wgcf-account.toml" ]; then
    cp "$DIST_DIR/wgcf-account.toml" "$TEMP_DIR/wgcf-account.toml"
  else
    wgcf register --accept-tos
  fi

  # Update License
  if [ -n "$WGCF_LICENSE_KEY" ]; then
    sed -i -e "s/license_key =.*/license_key = '$WGCF_LICENSE_KEY'/g" wgcf-account.toml
  fi

  wgcf update
  wgcf generate
  mkdir -p "$DIST_DIR" &> /dev/null
  cp wgcf-account.toml "$DIST_DIR/wgcf-account.toml"

  sed -i "/\[Interface\]/a PostDown = ip -6 rule delete from ${IPv6}  lookup main" wgcf-profile.conf
  sed -i "/\[Interface\]/a PostUp = ip -6 rule add from ${IPv6} lookup main" wgcf-profile.conf
  sed -i "/\[Interface\]/a PostDown = ip -4 rule delete from ${IPv4} lookup main" wgcf-profile.conf
  sed -i "/\[Interface\]/a PostUp = ip -4 rule add from ${IPv4} lookup main" wgcf-profile.conf

  # Update MTU
  if [ -n "$MTU" ]; then
    sed -i -e "s/MTU =.*/MTU = $MTU/g" wgcf-profile.conf
  fi

  # Update DNS
  if [ -n "$DNS" ]; then
    sed -i -e "s/DNS =.*/DNS = $DNS/g" wgcf-profile.conf
  fi

  # Fast Endpoint
  if [ -n "$FAST_ENDPOINT" ]; then
    if [ -n "$WGCF_ENDPOINT" ]; then
      log "error" "Conflicting parameters: FAST_ENDPOINT and WGCF_ENDPOINT"
      exit 1
    fi

    log "notice" "Searching for Fastest Endpoint..."
    _RAW_ENDPOINT="$(grep -Eo 'Endpoint = .*' wgcf-profile.conf | cut -d' ' -f3)"
    local PORT=$(awk -F: '{print $NF}' <<< "$_RAW_ENDPOINT")

    _RAW_FAST="$(fastest_cidr_ip "$WGCF_ENDPOINT_CIDR")" # 162.159.192.148 0.062
    local ADDR=$(cut -d' ' -f1 <<< "$_RAW_FAST")
    local ELAPSED=$(cut -d' ' -f2 <<< "$_RAW_FAST")

    log "notice" "Fastest Endpoint: $ADDR ($ELAPSED ms)"
    sed -i -e "s/Endpoint =.*/Endpoint = $ADDR:${WGCF_ENDPOINT_PORT:-$PORT}/g" wgcf-profile.conf
  fi

  # Update Endpoint
  if [ -n "$WGCF_ENDPOINT" ]; then
    sed -i -e "s/Endpoint =.*/Endpoint = $WGCF_ENDPOINT/g" wgcf-profile.conf
  fi

  # DNS Profile
  if [ -n "$DNS_PROFILE" ]; then
    local _DNS_PROFILE="$(uppercase "$DNS_PROFILE")"
    log "notice" "Applying DNS Profile: $DNS_PROFILE"
    declare -A DNS_PROFILES
    DNS_PROFILES=(
      ["DEFAULT"]="1.1.1.1, 1.0.0.1, 2606:4700:4700::1111, 2606:4700:4700::1001"
      ["MALWARE-ONLY"]="1.1.1.2, 1.0.0.2, 2606:4700:4700::1112, 2606:4700:4700::1112"
      ["MALWARE-AND-ADULT"]="1.1.1.3, 1.0.0.3, 2606:4700:4700::1113, 2606:4700:4700::1003"
    )

    if [[ -v DNS_PROFILES[$_DNS_PROFILE] ]]; then
      sed -i -e "s/DNS =.*/DNS = ${DNS_PROFILES[$_DNS_PROFILE]}/g" wgcf-profile.conf
    else
      log "error" "Invalid DNS Profile: $_DNS_PROFILE"
      exit 1
    fi
  fi

  cp wgcf-profile.conf "$DIST_DIR/wgcf-profile.conf"
  popd &> /dev/null || exit 1
  rm -fr "$TEMP_DIR"
}

fastest_cidr_ip() {
  local _CIDR="$1"
  _IP=""
  _RTT=""
  _RESULT_FILE="test.$(date +%s).log"
  fping -aqe -c 3 -g "$_CIDR" &> "$_RESULT_FILE"
  while read line; do
    _TMP_IP=$(cut -d' ' -f1 <<< "$line")
    _TMP_RTT=$(awk '{print $NF}' <<< "$line" | cut -d'/' -f2)
    if [ -z "$_IP" ]; then
      _IP="$_TMP_IP"
      _RTT="$_TMP_RTT"
    else
      if awk -v a="$_TMP_RTT" -v b="$_RTT" 'BEGIN{exit !(a < b)}'; then
        _IP="$_TMP_IP"
        _RTT="$_TMP_RTT"
      fi
    fi
  done < <(cat "$_RESULT_FILE")
  rm -f "$_RESULT_FILE"

  echo "$_IP $_RTT"
}
